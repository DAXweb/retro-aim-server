// Code generated by mockery v2.51.1. DO NOT EDIT.

package toc

import (
	state "github.com/mk6i/retro-aim-server/state"
	mock "github.com/stretchr/testify/mock"
)

// mockBuddyListRegistry is an autogenerated mock type for the BuddyListRegistry type
type mockBuddyListRegistry struct {
	mock.Mock
}

type mockBuddyListRegistry_Expecter struct {
	mock *mock.Mock
}

func (_m *mockBuddyListRegistry) EXPECT() *mockBuddyListRegistry_Expecter {
	return &mockBuddyListRegistry_Expecter{mock: &_m.Mock}
}

// RegisterBuddyList provides a mock function with given fields: user
func (_m *mockBuddyListRegistry) RegisterBuddyList(user state.IdentScreenName) error {
	ret := _m.Called(user)

	if len(ret) == 0 {
		panic("no return value specified for RegisterBuddyList")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(state.IdentScreenName) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockBuddyListRegistry_RegisterBuddyList_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterBuddyList'
type mockBuddyListRegistry_RegisterBuddyList_Call struct {
	*mock.Call
}

// RegisterBuddyList is a helper method to define mock.On call
//   - user state.IdentScreenName
func (_e *mockBuddyListRegistry_Expecter) RegisterBuddyList(user interface{}) *mockBuddyListRegistry_RegisterBuddyList_Call {
	return &mockBuddyListRegistry_RegisterBuddyList_Call{Call: _e.mock.On("RegisterBuddyList", user)}
}

func (_c *mockBuddyListRegistry_RegisterBuddyList_Call) Run(run func(user state.IdentScreenName)) *mockBuddyListRegistry_RegisterBuddyList_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(state.IdentScreenName))
	})
	return _c
}

func (_c *mockBuddyListRegistry_RegisterBuddyList_Call) Return(_a0 error) *mockBuddyListRegistry_RegisterBuddyList_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockBuddyListRegistry_RegisterBuddyList_Call) RunAndReturn(run func(state.IdentScreenName) error) *mockBuddyListRegistry_RegisterBuddyList_Call {
	_c.Call.Return(run)
	return _c
}

// UnregisterBuddyList provides a mock function with given fields: user
func (_m *mockBuddyListRegistry) UnregisterBuddyList(user state.IdentScreenName) error {
	ret := _m.Called(user)

	if len(ret) == 0 {
		panic("no return value specified for UnregisterBuddyList")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(state.IdentScreenName) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockBuddyListRegistry_UnregisterBuddyList_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UnregisterBuddyList'
type mockBuddyListRegistry_UnregisterBuddyList_Call struct {
	*mock.Call
}

// UnregisterBuddyList is a helper method to define mock.On call
//   - user state.IdentScreenName
func (_e *mockBuddyListRegistry_Expecter) UnregisterBuddyList(user interface{}) *mockBuddyListRegistry_UnregisterBuddyList_Call {
	return &mockBuddyListRegistry_UnregisterBuddyList_Call{Call: _e.mock.On("UnregisterBuddyList", user)}
}

func (_c *mockBuddyListRegistry_UnregisterBuddyList_Call) Run(run func(user state.IdentScreenName)) *mockBuddyListRegistry_UnregisterBuddyList_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(state.IdentScreenName))
	})
	return _c
}

func (_c *mockBuddyListRegistry_UnregisterBuddyList_Call) Return(_a0 error) *mockBuddyListRegistry_UnregisterBuddyList_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockBuddyListRegistry_UnregisterBuddyList_Call) RunAndReturn(run func(state.IdentScreenName) error) *mockBuddyListRegistry_UnregisterBuddyList_Call {
	_c.Call.Return(run)
	return _c
}

// newMockBuddyListRegistry creates a new instance of mockBuddyListRegistry. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockBuddyListRegistry(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockBuddyListRegistry {
	mock := &mockBuddyListRegistry{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
