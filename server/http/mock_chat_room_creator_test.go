// Code generated by mockery v2.51.1. DO NOT EDIT.

package http

import (
	state "github.com/mk6i/retro-aim-server/state"
	mock "github.com/stretchr/testify/mock"
)

// mockChatRoomCreator is an autogenerated mock type for the ChatRoomCreator type
type mockChatRoomCreator struct {
	mock.Mock
}

type mockChatRoomCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *mockChatRoomCreator) EXPECT() *mockChatRoomCreator_Expecter {
	return &mockChatRoomCreator_Expecter{mock: &_m.Mock}
}

// CreateChatRoom provides a mock function with given fields: chatRoom
func (_m *mockChatRoomCreator) CreateChatRoom(chatRoom *state.ChatRoom) error {
	ret := _m.Called(chatRoom)

	if len(ret) == 0 {
		panic("no return value specified for CreateChatRoom")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*state.ChatRoom) error); ok {
		r0 = rf(chatRoom)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockChatRoomCreator_CreateChatRoom_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateChatRoom'
type mockChatRoomCreator_CreateChatRoom_Call struct {
	*mock.Call
}

// CreateChatRoom is a helper method to define mock.On call
//   - chatRoom *state.ChatRoom
func (_e *mockChatRoomCreator_Expecter) CreateChatRoom(chatRoom interface{}) *mockChatRoomCreator_CreateChatRoom_Call {
	return &mockChatRoomCreator_CreateChatRoom_Call{Call: _e.mock.On("CreateChatRoom", chatRoom)}
}

func (_c *mockChatRoomCreator_CreateChatRoom_Call) Run(run func(chatRoom *state.ChatRoom)) *mockChatRoomCreator_CreateChatRoom_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*state.ChatRoom))
	})
	return _c
}

func (_c *mockChatRoomCreator_CreateChatRoom_Call) Return(_a0 error) *mockChatRoomCreator_CreateChatRoom_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockChatRoomCreator_CreateChatRoom_Call) RunAndReturn(run func(*state.ChatRoom) error) *mockChatRoomCreator_CreateChatRoom_Call {
	_c.Call.Return(run)
	return _c
}

// newMockChatRoomCreator creates a new instance of mockChatRoomCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockChatRoomCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockChatRoomCreator {
	mock := &mockChatRoomCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
