// Code generated by mockery v2.51.1. DO NOT EDIT.

package http

import mock "github.com/stretchr/testify/mock"

// mockBARTRetriever is an autogenerated mock type for the BARTRetriever type
type mockBARTRetriever struct {
	mock.Mock
}

type mockBARTRetriever_Expecter struct {
	mock *mock.Mock
}

func (_m *mockBARTRetriever) EXPECT() *mockBARTRetriever_Expecter {
	return &mockBARTRetriever_Expecter{mock: &_m.Mock}
}

// BARTRetrieve provides a mock function with given fields: itemHash
func (_m *mockBARTRetriever) BARTRetrieve(itemHash []byte) ([]byte, error) {
	ret := _m.Called(itemHash)

	if len(ret) == 0 {
		panic("no return value specified for BARTRetrieve")
	}

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func([]byte) ([]byte, error)); ok {
		return rf(itemHash)
	}
	if rf, ok := ret.Get(0).(func([]byte) []byte); ok {
		r0 = rf(itemHash)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(itemHash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockBARTRetriever_BARTRetrieve_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BARTRetrieve'
type mockBARTRetriever_BARTRetrieve_Call struct {
	*mock.Call
}

// BARTRetrieve is a helper method to define mock.On call
//   - itemHash []byte
func (_e *mockBARTRetriever_Expecter) BARTRetrieve(itemHash interface{}) *mockBARTRetriever_BARTRetrieve_Call {
	return &mockBARTRetriever_BARTRetrieve_Call{Call: _e.mock.On("BARTRetrieve", itemHash)}
}

func (_c *mockBARTRetriever_BARTRetrieve_Call) Run(run func(itemHash []byte)) *mockBARTRetriever_BARTRetrieve_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *mockBARTRetriever_BARTRetrieve_Call) Return(_a0 []byte, _a1 error) *mockBARTRetriever_BARTRetrieve_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockBARTRetriever_BARTRetrieve_Call) RunAndReturn(run func([]byte) ([]byte, error)) *mockBARTRetriever_BARTRetrieve_Call {
	_c.Call.Return(run)
	return _c
}

// newMockBARTRetriever creates a new instance of mockBARTRetriever. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockBARTRetriever(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockBARTRetriever {
	mock := &mockBARTRetriever{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
